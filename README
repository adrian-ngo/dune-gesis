DUNE-GESIS
==========

This is version 1.0.0 of the DUNE-GESIS module.

GESIS (GEoStatistical Inversion based on Stationary problems) 
is a collection of applications for the solution of 
(1) the steady-state groundwater flow problem,
(2) the steady-state groundwater solute transport,
(3) the large-scale inverse problem 
    (estimating the hydraulic conductivity of a confined aquifer 
    from measurements of the hydraulic head or the temporal moments 
    of a tracer concentration) 
    using the quasi-linear geostatistical approach (QLGA).


The following six applications can be built:

1. gesis2dDG: solves (1)+(2)+(3) on a structured 2-D mesh with rectangular elements 
              (using the DUNE-YASP grid)

2. gesis3dDG: solves (1)+(2)+(3) on a structured 3-D mesh with rectangular elements 
              (using the DUNE-YASP grid)

3. gesisUG2dDG: solves (1) on a structured 2-D mesh with rectangular elements,
                solves (2) on a locally refined 2-D mesh with non-conforming refinement of rectangular elements
                (using the UG grid, sequential version only)

4. gesisALU3dDG: solves (1) on a structured 3-D mesh with rectangular elements,
                 solves (2) on a locally refined 3-D mesh with non-conforming refinement of rectangular elements
                 (using the dune-alugrid module, parallelized with dynamic load-balancind)

5. gesis2dFEM: solves (1)+(2)+(3) on a structured 2-D mesh with rectangular elements 
              (using the DUNE-YASP grid)

6. gesis3dFEM: solves (1)+(2)+(3) on a structured 3-D mesh with rectangular elements 
              (using the DUNE-YASP grid)

Applications 1-4 are based on the cell-centered finite volume and the discontinuous Galerkin schemes (CCFV/DG),
applications 5-6 are based on the standard Galerkin FEM method and the streamline diffusion method (FEM/SDFEM).

If you need help, please contact the author Adrian Ngo <ngo@eclipso.de>.




Dependencies
------------

DUNE-GESIS depends on the following software packages:

* The DUNE core modules, version 2.3.1.
* The DUNE module dune-typetree, version 2.3.1.
* The DUNE module dune-pdelab, version 2.0.0.
* DUNE-GESIS uses lots of templates, so you need a decent C++ compiler.
  C++11 support is required. 
  It is tested for gcc 4.8 and clang 3.4.

For a full explanation of the DUNE installation process please read
the installation notes [2] or the build system HOWTO [3].

Furthermore, the following external libraries are required.

* The Boost PropertyTree (version 1.47.0 or higher) 
  See http://www.boost.org/doc/libs/1_47_0/doc/html/property_tree.html.

* The FFTW library (version 3.3.2 or higher).
  See http://www.hdfgroup.org/HDF5/release/obtain5.html.

* The HDF5 library (version 1.8.13 or higher).
  See http://www.fftw.org/download.html.


Optional dependencies
---------------------
* Adaptive mesh refinement in 2-D (sequential mode) requires UG (version 3.11.0 or higher).
  See http://www.iwr.uni-heidelberg.de/iwrwikiequipment/software/ug.
* Adaptive mesh refinement in 3-D (parallel with dynamic load balancing) requires the DUNE module dune-alugrid (version 2.3 or higher).
  See http://users.dune-project.org/projects/dune-alugrid



Recommended software for the visualization of output data
---------------------------------------------------------
* Paraview (Graphical User Interface for displaying VTK files.)
  See http://www.paraview.org/.
* h5tovtk (Command-line tool to the convert HDF5 format into the vtk format, from the h5utils collection.)
  See http://www.hdfgroup.org/tools5app.html.
* The Python scripts listed inside the 'tools/' directory require Python libararies numpy, h5py and matplotlib.


License
-------

The PDELab library, headers and test programs are free open-source software,
dual-licensed under version 3 or later of the GNU Lesser General Public License
and version 2 of the GNU General Public License with a special run-time exception.

See the file COPYING for full copying permissions.



Installation
------------

Short installation instructions can be found in file 'INSTALL'. 
For the full instructions about DUNE please see [1].



Getting started
---------------
The six applications mentioned above (gesis2dDG, gesis3dDG, gesisUG2dDG, gesisALU3dDG, gesis2dFEM, gesis3dFEM)
are built inside the 'dune-gesis/src/' directory.

To run these applications, switch to one of the working directories

- 'dune-gesis/bin/YASP' for gesis2dDG, gesis3dDG, gesis2dFEM and gesis3dFEM,
- 'dune-gesis/bin/UG' for gesisUG2dDG,
- 'dune-gesis/bin/ALUGRID' for gesisALU3dDG

and first run 

./updateBin.sh 

to retrieve the latest build results.

Inside these directories, you will find examples of input files required by these applications.
The input files contain domain data, grid data and geostatistical properties of the
parameter field (log hydraulic conductivity) and a set of boundary value problems.

'InputFile2d.xml' for 2-D simulations 
or 
'InputFile3d.xml' for for 3-D simulations.

The author is working on the documentation of these input files.
Please contact him directly via 

"ngo@eclipso.de" 

or take a look at

"https://github.com/adrian-ngo/dune-gesis" 

where updates may be made available in the future.


An application can be started in sequential mode directly
or in parallel mode using mpirun, e.g.:

If you are inside the directory 'dune-gesis/bin/YASP', you may run

./gesis2dDG

or

mpirun -np 4 ./gesis2dDG

The amount of output can be regulated by the verbosity attribute inside the input XML.
The <domain_data><extensions> tag specifies the length per dimension of the physical domain.
The <domain_data><virtual_nCells> tag specifies the numbers of mesh cells per dimension.

Different types of output data are found in DATA, BUFFER_DG (BUFFER_FEM) and OUTPUT_DG (OUTPUT_FEM):
HDF5 files (*.h5) containing multi-dimensional structured arrays of discretized quantities 
such the parameter field (Y = log conductivity) or the sensitivity fields.
VTK files (*.vtu or *.pvtu) containing output that can be opened in the visualization tool Paraview.




Links
-----

0. http://www.dune-project.org/pdelab/
1. http://www.dune-project.org
2. http://www.dune-project.org/doc/installation-notes.html
3. http://dune-project.org/doc/buildsystem/buildsystem.pdf
4. http://gcc.gnu.org/onlinedocs/libstdc++/faq.html#faq.license
5. http://lists.dune-project.org/mailman/listinfo/dune-pdelab
6. http://users.dune-project.org/projects/dune-pdelab/issues
